var express = require('express');
var router = express.Router();
var mysql = require("mysql");
var dbconfig = require('./config/database');
var queryconfig = require('./query/network_query');
var portscanner = require('./config/portscan');


//var portscanner = require('./lib/portscanner')

var conn = mysql.createConnection(dbconfig);

var moment = require('moment');
require('moment-timezone');
moment.tz.setDefault("Asia/Seoul");

function startScanner() {
    portscanner.stop();  
    var _query = queryconfig.selectAll();
    conn.query(_query, function(err, rows, fields) {
      if(err) {
        res.status(404).end();
      }else {
        portscanner.networkList=[];

        portscanner.networkList = rows;
        console.log(portscanner.networkList.length);
        //portscanner.scanStartFnc();
        portscanner.start();
      }
    });
}

startScanner();
//조회
router.get('/', function(req, res, next) {
  var _this = this;
  var _query = queryconfig.selectAll();
  conn.query(_query, function(err, rows, fields) {
      if(err) {
        console.log(date);
         res.status(404).end();
      }else {
       //portscanner.networkList = rows;
        //portscanner.scanStartFnc();
       // portscanner.start();
       //startScanner();
        res.json(rows);
      }
  });
});

//입력
/*
    @body url
    @body port 
    @body neType
    @body location
    @body siteId
    @body result
*/
router.post('/', function(req, res, next) {
  var date = moment().format('YYYY-MM-DD HH:mm:ss.SSS');
    var _reqBody = req.body;
    _reqBody.createDate = date;
    console.log(_reqBody);
    var _query = queryconfig.insert(_reqBody);
    console.log(_query);
  
    conn.query(_query, function(err, rows, fields) {
        if(err) {
           res.status(404).end();   
        }else {
          console.log(rows);   
          portscanner.networkList.push(rows);   
          res.json(rows);
        }
    });
});


//수정
/*
  @param id
  @body url
  @body port 
  @body neType
  @body location
  @body result
  @body description
*/
router.put('/:id',function(req, res, next) {
  var date = moment().format('YYYY-MM-DD HH:mm:ss.SSS');
    var _req = req.body;
    var _id = req.params.id;

    _req.id = _id;
    _req.date = date;

    var _query = queryconfig.update(_req);
    console.log(_query);
    conn.query(_query, function(err, rows, fields) {
        if(err) {
           res.status(404).end();
        }else {
          //startScanner();
          res.json(rows);
        }
    });
});

//네트워크 삭제
router.delete('/:id', function(req, res, next){
  var _id = req.params.id;

  var _query = queryconfig.delete(_id);
  conn.query(_query, function(err, rows, fields) {
        if(err) {
          res.status(404).end();
      }else {
        console.log("rows->",rows);
        console.log("fields-->",fields);
        //startScanner();
        res.json(rows);
      }
  });
});

router.get('/site',function(req, res, next){
    var _query = queryconfig.findGroupBynetwork();
    conn.query(_query, function(err, rows, fields) {
      if(err) {
        res.status(404).end();
      }else {
        console.log(rows);
        res.json(rows);
      }
    });
});

router.get('/site/:id', function(req, res, next){
    var _id = req.params.id;

    var _query = queryconfig.findSiteBynetwork(_id);
    conn.query(_query, function(err, rows, fields) {
      if(err) {
        res.status(404).end();
      }else {
        res.json(rows);
      }
    });

});

module.exports = router;
